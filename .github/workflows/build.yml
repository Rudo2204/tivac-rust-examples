# https://github.com/rust-lang/rust/blob/master/.github/workflows/ci.yml
# https://github.com/launchbadge/sqlx/blob/master/.github/workflows/sqlx.yml
# https://github.com/dh1tw/remoteAudio/blob/master/.github/workflows/build.yml
# https://github.com/actions-rs
# TODO: Set CRATE_NAME to match the project name
name: CI
env:
  CRATE_NAME: tivac-rust-examples

on: [push, pull_request]

jobs:
  check:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    name: CI Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-check-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-check-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: thumbv7em-none-eabihf

      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --examples

  build:
    needs: check
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install arm-none-eabi-objcopy
        shell: bash
        run: |
            sudo apt install -y gcc-arm-none-eabi

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: thumbv7em-none-eabihf

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --examples

      - name: Run arm-none-eabi-objcopy
        shell: bash
        run: |
            mkdir -p binary
            for f in examples/*.rs; do tmp="${f#"examples/"}"; file="${tmp%%.rs}"; arm-none-eabi-objcopy -O binary "$CARGO_TARGET_DIR/thumbv7em-none-eabihf/release/examples/$file" "binary/$file"; done

      - uses: actions/upload-artifact@v2
        with:
          name: tivac-binary
          path: binary/

      - name: Get VERSION
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_version
        shell: bash
        run: |
          echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/}"

      - name: Renaming files before uploading
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        shell: bash
        run: |
          mkdir -p gh-release
          for f in examples/*.rs; do tmp="${f#"examples/"}"; file="${tmp%%.rs}"; cp "binary/$file.bin" "gh-release/$file-$VERSION.bin"; done

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          prerelease: false
          files: |
            gh-release/*.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
